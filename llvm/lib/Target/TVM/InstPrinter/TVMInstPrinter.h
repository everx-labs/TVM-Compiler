//= TVMInstPrinter.h - Convert TVM MCInst to assembly syntax -------*- C++ -*-//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//
// This class prints a TVM MCInst to a .s file.
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_TVM_INSTPRINTER_TVMINSTPRINTER_H
#define LLVM_LIB_TARGET_TVM_INSTPRINTER_TVMINSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
class TVMInstPrinter : public MCInstPrinter {
public:
  TVMInstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                 const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &OS) override;

//  virtual bool printAliasInstr(const MCInst *MI, raw_ostream &O);
//  virtual void printCustomAliasOperand(const MCInst *MI, unsigned OpIdx,
//                                       unsigned PrintMethodIdx,
//                                       raw_ostream &O);

  // Autogenerated by tblgen.
//  void printInstruction(const MCInst *MI, raw_ostream &O);
  void printOperand(const MCInst *MI, unsigned OpNo, raw_ostream &O);
  void printUimm257(const MCInst *MI, unsigned OpNo, raw_ostream &O);

  void printRegisterList(const MCInst *MI, unsigned OpNum, raw_ostream &O);

//  static const char *getRegisterName(unsigned RegNo);

  // Autogenerated by tblgen.
  std::pair<const char *, uint64_t> getMnemonic(const MCInst *MI) override;
  void printInstruction(const MCInst *MI, uint64_t Address,
                        /* const MCSubtargetInfo &STI, */ raw_ostream &O);
  bool printAliasInstr(const MCInst *MI, uint64_t Address,
                       /* const MCSubtargetInfo &STI, */ raw_ostream &O);
  void printCustomAliasOperand(const MCInst *MI, uint64_t Address,
                               unsigned OpIdx, unsigned PrintMethodIdx,
                               /* const MCSubtargetInfo &STI, */ raw_ostream &O);
  static const char *getRegisterName(unsigned RegNo);
  static const char *getRegisterName(unsigned RegNo, unsigned AltIdx);

protected:
  int depth = 0;
};
} // namespace llvm

#endif // LLVM_LIB_TARGET_TVM_INSTPRINTER_TVMINSTPRINTER_H
